<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Pavel Derendyaev test</title>
    <link>http://blog.dddpaul.pw/tags/golang/</link>
    <description>Recent content in Golang on Pavel Derendyaev test</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Jun 2018 19:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.dddpaul.pw/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple Netcat tool written in Go</title>
      <link>http://blog.dddpaul.pw/2018/06/25/gonc/</link>
      <pubDate>Mon, 25 Jun 2018 19:00:00 +0000</pubDate>
      
      <guid>http://blog.dddpaul.pw/2018/06/25/gonc/</guid>
      <description>It&amp;rsquo;s spectacularly simple to implement TCP Netcat in Go thanks to io.Copy.
type Progress struct { bytes uint64 } func TransferStreams(con net.Conn) { c := make(chan Progress) // Read from Reader and write to Writer until EOF 	copy := func(r io.ReadCloser, w io.WriteCloser) { defer func() { r.Close() w.Close() }() n, _ := io.Copy(w, r) c &amp;lt;- Progress{bytes: uint64(n)} } go copy(con, os.Stdout) go copy(os.Stdin, con) p := &amp;lt;-c log.</description>
    </item>
    
    <item>
      <title>First note</title>
      <link>http://blog.dddpaul.pw/2014/07/28/oldest/</link>
      <pubDate>Mon, 28 Jul 2014 12:00:00 +0000</pubDate>
      
      <guid>http://blog.dddpaul.pw/2014/07/28/oldest/</guid>
      <description>This blog is based on Hugo - static site generator written on Go. GitHub interaction is organized with use of Hosting on GitHub Pages tutorial. See &amp;ldquo;Configure git Workflow&amp;rdquo; section specifically.
And for all of the git 1.7.x (and older) users - you can grab git-subtree from contrib directory of Git repo. I&amp;rsquo;ve used git-subtree from latest 1.8.x. It&amp;rsquo;s just a shell script, run make, chmod +x git-subtree and copy it to /usr/lib/git-core.</description>
    </item>
    
  </channel>
</rss>