<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Pavel Derendyaev test</title>
    <link>http://blog.dddpaul.pw/tags/java/</link>
    <description>Recent content in Java on Pavel Derendyaev test</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Jun 2018 19:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.dddpaul.pw/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java network listeners</title>
      <link>http://blog.dddpaul.pw/2018/06/24/java-listeners/</link>
      <pubDate>Sun, 24 Jun 2018 19:00:00 +0000</pubDate>
      
      <guid>http://blog.dddpaul.pw/2018/06/24/java-listeners/</guid>
      <description>I&amp;rsquo;ve written a small listeners library today. It allows to create Callables which can be submitted to ExecutorService. The callable itself implements creating server socket and binding it to local port.
There two principal type of listeners: blocking and non-blocking (thanks to Java NIO.
Blocking listener is very simple but in can&amp;rsquo;t be interrupted by calling thread. So there&amp;rsquo;s no point in that:
Future&amp;lt;Socket&amp;gt; future = executor.submit( Listeners.createListener( PORT ) ); try { Socket socket = future.</description>
    </item>
    
  </channel>
</rss>